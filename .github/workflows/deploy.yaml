name: Build & Deploy to CloudHub 2.0

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_NAME: mule-service
  RUNTIME_VERSION: 4.4.0
  REGION: ap-southeast-2
  WORKER_SIZE: CH2_MEDIUM
  REPLICAS: 1
  BUSINESS_GROUP: mule-test
  ENVIRONMENT: sandbox

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 8 + Maven 3.9
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: maven

      - name: Build Mule application
        run: mvn -B clean package -DmuleDeploy

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mule-app
          path: target/*.jar
          if-no-files-found: error   # <- optional but recommended

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: mule-app

      - name: Install Anypoint CLI v4
        run: npm install -g anypoint-cli-v4

      - name: Log in to Anypoint
        env:
          ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        run: |
          anypoint-cli-v4 --client_id "$ANYPOINT_CLIENT_ID" \
                          --client_secret "$ANYPOINT_CLIENT_SECRET" \
                          --no-interactive account:login

      - name: Select business group & environment
        run: |
          anypoint-cli-v4 account:use "$BUSINESS_GROUP"
          anypoint-cli-v4 environment:use "$ENVIRONMENT"

      - name: Deploy to CloudHub 2.0
        run: |
          FILE=$(ls *.jar | head -n 1)
          echo "Deploying $FILE to CloudHub 2.0 ..."
          anypoint-cli-v4 runtime-mgr cloudhub2 applications deploy \
            --name "$APP_NAME" \
            --file "$FILE" \
            --runtime "$RUNTIME_VERSION" \
            --region "$REGION" \
            --worker-type "$WORKER_SIZE" \
            --replicas "$REPLICAS" \
            --redeploy
