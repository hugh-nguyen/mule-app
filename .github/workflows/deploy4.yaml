name: DEPLOY

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_NAME: mule-service
  RUNTIME_VERSION: 4.4.0
  REPLICAS: 1
  GROUP_ID: com.example
  ASSET_ID: mule-service
  VERSION: 0.0.1
  ANYPOINT_ORG: ed678fab-d850-43e4-86b8-1c7ccfbc907a
  ANYPOINT_ENV: Sandbox
  DEPLOYMENT_TARGET_ID: 14ea2e0c-40a3-44c0-8d25-2a8e6020a19d

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: maven

      - name: Build Mule application
        run: mvn clean package

      - name: Install Anypoint CLI
        run: npm install -g anypoint-cli-v4

      - name: Upload to Exchange (Step 1)
        run: |
          # Find the JAR file
          JAR_FILE=$(find target -name "*.jar" -type f | grep -v "original")
          echo "Uploading $JAR_FILE to Exchange..."
          
          # Upload as mule-application type with specific classifier and packaging
          # Using the proper format from the documentation
          anypoint-cli-v4 exchange:asset:upload \
            --name "$APP_NAME" \
            --description "Mule Service Application" \
            --type "app" \
            --properties='{"mainFile":"mule-service.jar"}' \
            --files='{"mule-application.jar":"'$JAR_FILE'"}' \
            "$GROUP_ID/$ASSET_ID/$VERSION"

      - name: List Exchange Assets (Debug)
        run: |
          echo "Listing Exchange assets to verify upload..."
          anypoint-cli-v4 exchange:asset:list --organization "$ANYPOINT_ORG"

      - name: Deploy from Exchange (Step 2)
        run: |
          echo "Deploying $APP_NAME from Exchange to CloudHub 2.0..."
          
          # Deploy from Exchange to CloudHub 2.0
          anypoint-cli-v4 runtime-mgr application deploy \
            "$APP_NAME" \
            "$DEPLOYMENT_TARGET_ID" \
            "$RUNTIME_VERSION" \
            "$ASSET_ID" \
            --organization "$ANYPOINT_ORG" \
            --environment "$ANYPOINT_ENV" \
            --groupId "$GROUP_ID" \
            --assetVersion "$VERSION" \
            --replicas "$REPLICAS"